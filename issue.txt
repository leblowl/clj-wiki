Hey. I am trying to get started with Luminus. I got stuck on my first migration. Of course, there was an error. So the first thing I tried to do was to check out the status of my migrations: I tried running `lein migratus pending` which failed due to `java.lang.IllegalArgumentException: db-spec null is missing a required parameter` (apparently due to a missing `:database-url` environment param).

According to the Luminus docs `dev-config.edn` is used for configuring the dev environment: `dev-config.edn - used for local development configuration that should not be checked into the code repository`. But through my experience I found `dev-config.edn` is not merged into the environment when using lein plugins like migratus, although it is included in `:jvm-opts`: https://github.com/luminus-framework/luminus-template/blob/2cd546dda003dd1f89c4374b33f280ad9c873ec4/resources/leiningen/new/luminus/core/project.clj#L43 I recently worked on a Django project where the environment was always loaded for `manage.py` commands. I expected the same for `lein` commands. 

One example (https://github.com/yogthos/memory-hole) suggests creating a `profiles.clj` file. This seems to work, but if we maintain both a `dev-config.edn` file and a `profiles.clj` then I believe this goes against the DRY principle (which I think is pretty helpful).

So basically as a beginner, what I expect is a single environment configuration file that is loaded for all lein (or boot) commands, including plugins, launching servers, REPLs, etc.

I figured out the following solution in my `project.clj` that satisfies migratus:
```clojure
:profiles/dev {:env ~(clojure.edn/read-string (slurp "dev-config.edn"))}
```

So I guess I am suggesting either a modification to the base Luminus template to make configuration more universal/ready-out-of-the-box and/or updates to the docs that explain what to expect out of the configuration file in more detail.

Another confusing point from a beginners point of view was figuring out that `lein` does not pull in environment variables from the `:jvm-opts` key in `project.clj` ... I thought `lein` used the jvm as well and would be able to set itself up with those options..
